%Dana Schultz, Jul 21 2020
function parameters = InitialiseParameters(varargin)
%constant parameters
parameters = struct(...
    %{
    'cycle_limit',...
        [10; ... %length of each trial
        100; ... %number of trials
        1; ...
        1],... 
    'lpmi',                         1,... loop position of main iteration; i.e. if external input changes to next time step when inc_vect is [0,1,0] then lpmi is 2.
    %}
    ... % visualization toggles
    'toggle_figures',               true,...
    'toggle_display_failure_mode',  true,...
    ...
    ... % data recording settings
    'toggle_record_success',        true,...
    'toggle_record_training',       true,...
    'toggle_record_y',              true,... % y and z dimensions: # neurons x timesteps x trials
    'toggle_record_z_train',        true,... 
    'toggle_record_z_test',         true,...
    'toggle_record_weights_exc',    true,...
    'toggle_record_weights_inh',    true,...
    'toggle_record_k0',             true,...
    'toggle_record_kff',            false,...
    ...
    ... % stopwatch toggle
    'toggle_fxn_stopwatch',         true,... % toggle true to record elapsed time
    ...
    ... % general settings
    'toggle_training',              true,...
    'toggle_testing' ,              true,...
    'number_of_trials',             50,... 
    'consecutive_successes_to_halt',2,... % after this many successes-in-a-row, halt the program (this saves time); will only run if the previous toggle is on.
    ...
    ... % boxcar settings
    'toggle_divisive_refractory',   true,...
    'boxcar_refractory_period',     1,... %when set to 1 there is no refractory period
    'boxcar_window',                2,... %excitation boxcar
    'boxcar_scales',                [.5,.5],... % should sum to 1
    'boxcar_window_inh',            2,...
    'boxcar_scales_inh',            [.5,.5],...
    ...
    ... % random number seeds
    'network_construction_seed',    randi(100,1),... 
    'z_0_seed',                     randi(100,1),... 
    ...
    ... % network topology settings
    'number_of_neurons',            uint16(1200),...
    'connectivity',                 0.1,... %fan in is exact i.e. each postsyn. nrn is enervated by same number of nrns
    'desired_mean_z',               0.1,...
    ...
    ... % input settings
    'toggle_external_input',        true,... 
    'ext_activation',               uint16(30),... %default 30
    'stutter',                      uint16(5),...x
    'shift',                        uint16(30),... %default 15
    'n_patterns',                   uint16(40),... %!!!!!!! 60 was working boxcar 2
    'extra_timesteps_train',        0,... % add this many timesteps with no external activation to the end of each trial; use test_length_of_each_trial to add timesteps during testing
    'on_noise',                     0,... %probability between 0-1
    'off_noise',                    0.5,... %probability between 0-1
    'test_off_noise',               0.5,...
    'test_on_noise',                0.0,...
    ...
    ... % testing parameters
    'test_length_of_each_trial',    40*5,... %set this equal to stutter * number of patterns
    'first_stimulus_length',        uint16(5),... %in general, set this equal to stutter * boxcar window
    ...
    ... % trace conditioning
    'trace_interval',               uint16(0),...
    'toggle_trace',                 false,... %true trace, false normal
    ...
    ... % modification rates
    'toggle_k0_preliminary_mod',    false,...%adjust k0 before training begins to attune to desired activity 
    'toggle_k0_training_mod',       true,...%modify k0 at the end of each trial to maintain desired activity
    'epsilon_pre_then_post',        0.08,...
    'epsilon_post_then_pre',        0.08,...
    'epsilon_feedback',             0.08,...
    'epsilon_k_0',                  0.5,... %modification rate used to adapt k0 before and/or during training; make sure appropriate toggles above are turned on
    'epsilon_k_ff',                 0,...%kff will not be updated unless pre then post is off
    ... 
    ... % synaptic modification settings
    'toggle_pre_then_post',         true,...
    'toggle_post_then_pre',         true,... %!!!!!!!
    'toggle_stutter_e_fold_decay',  false,... %set to false when changing decay rates
    'decay_pre_then_post',          0.78,... %nmda .7166 ; 0.82 works with box2
    'decay_post_then_pre',          0.78,... %spiketiming
    'offset_pre_then_post',         0,...
    'offset_post_then_pre',         0,...
    ...
    ... % starting values for some variables
    'k_0_start',                    0.3,...  
    'k_fb_start',                   0.04,...
    'k_ff_start',                   0.005,... 0.0066 ...
    ...
    ... % weight settings
    'toggle_rand_weights',          false,... %toggle between random and uniform excitatory weights
    'weight_start',                 0.4,... %starting value if using uniform weights
    'weight_high',                  0.2,... %upper limit for weight values if using random distribution
    'weight_low',                   0.8,... %lower limit for weight values if using random distribution
    'weight_inhib_start',           1 ... %choose starting weight value for inhibitory synapse; default 1
    ...
);
if nargin>0
    parameters = WriteToStruct(parameters,varargin{:});
end
parameters = AdjustParameters(parameters);
end

function parameters = AdjustParameters(parameters)

    if parameters.toggle_stutter_e_fold_decay
        stutter = double(parameters.stutter);
        parameters.decay_pre_then_post = exp(-1/(stutter-2));
        parameters.decay_post_then_pre = exp(-1/(stutter-2));
    end
    
    parameters.length_of_each_trial = parameters.n_patterns * ...
        (parameters.stutter + parameters.trace_interval);

    %network and topology settings
    n_nrns = double(parameters.number_of_neurons);
%     parameters.n_fanin = uint16(n_nrns*parameters.connectivity);
    parameters.n_fanin = round(n_nrns*parameters.connectivity);
    %set range of neurons that are to be viewed during the simulation
    parameters.nrn_viewing_range = [1,parameters.number_of_neurons];

end
